services:
    homepage:
        image: ghcr.io/gethomepage/homepage:latest
        container_name: homepage
        ports:
            - "80:3000"
        volumes:
            - ./config/homepage:/app/config
            - /var/run/docker.sock:/var/run/docker.sock:ro
        restart: unless-stopped

    portainer:
        image: portainer/portainer-ce:lts
        container_name: portainer
        restart: unless-stopped
        ports:
            - "9000:9000"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - portainer_data:/data

    uptime-kuma:
        image: louislam/uptime-kuma:1
        container_name: uptime-kuma
        restart: unless-stopped
        ports:
            - "3001:3001"
        volumes:
            - uptime-kuma_data:/app/data

    wg-easy:
        image: ghcr.io/wg-easy/wg-easy
        container_name: wg-easy
        environment:
            - PORT=51821
            - WG_PORT=51820
        volumes:
            - wg-easy_data:/etc/wireguard
        ports:
            - "51820:51820/udp"
            - "51821:51821/tcp"
        cap_add:
            - NET_ADMIN
            - SYS_MODULE
        sysctls:
            net.ipv4.conf.all.src_valid_mark: 1
            net.ipv4.ip_forward: 1
        restart: unless-stopped
        env_file:
            - .env

    syncthing:
        image: syncthing/syncthing:latest
        container_name: syncthing
        hostname: syncthing
        ports:
            - "8384:8384"
            - "22000:22000/tcp"
            - "22000:22000/udp"
            - "21027:21027/udp"
        volumes:
            - /var/syncthing:/var/syncthing
            - syncthing_data:/var/data
        restart: unless-stopped

    grafana:
        image: grafana/grafana-enterprise
        container_name: grafana
        networks:
            - monitoring
        ports:
            - "3000:3000"
        restart: unless-stopped
        volumes:
            - grafana_data:/var/lib/grafana

    prometheus:
        image: prom/prometheus
        container_name: prometheus
        networks:
            - monitoring
        ports:
            - "9090:9090"
        volumes:
            - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
            - prometheus_data:/prometheus
        restart: unless-stopped

    node-exporter:
        image: quay.io/prometheus/node-exporter:latest
        container_name: node-exporter
        networks:
            - monitoring
        volumes:
            - "/:/host:ro,rslave"
        command: --path.rootfs=/host
        restart: unless-stopped

    netdata:
        image: netdata/netdata
        container_name: netdata
        pid: host
        network_mode: host
        volumes:
            - netdataconfig:/etc/netdata
            - netdatalib:/var/lib/netdata
            - netdatacache:/var/cache/netdata
            - /:/host/root:ro,rslave
            - /etc/passwd:/host/etc/passwd:ro
            - /etc/group:/host/etc/group:ro
            - /etc/localtime:/etc/localtime:ro
            - /proc:/host/proc:ro
            - /sys:/host/sys:ro
            - /etc/os-release:/host/etc/os-release:ro
            - /var/log:/host/var/log:ro
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - /run/dbus:/run/dbus:ro
        restart: unless-stopped
        cap_add:
            - SYS_PTRACE
            - SYS_ADMIN
        security_opt:
            - apparmor=unconfined

    watchtower:
        image: containrrr/watchtower
        container_name: watchtower
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        restart: unless-stopped

    vaultwarden:
        image: vaultwarden/server:latest
        container_name: vaultwarden
        volumes:
            - vaultwarden_data:/data/
        restart: unless-stopped
        ports:
            - "8080:80"

networks:
    monitoring:
        driver: bridge

volumes:
    portainer_data:
        name: portainer_data
        driver: local
    uptime-kuma_data:
        name: uptime-kuma_data
        driver: local
    wg-easy_data:
        name: wg-easy_data
        driver: local
    syncthing_data:
        name: syncthing_data
        driver: local
    prometheus_data:
        name: prometheus_data
        driver: local
    netdataconfig:
        name: netdataconfig
        driver: local
    netdatalib:
        name: netdatalib
        driver: local
    netdatacache:
        name: netdatacache
        driver: local
    grafana_data:
        name: grafana_data
        driver: local
    vaultwarden_data:
        name: vaultwarden_data
        driver: local
